{"ast":null,"code":"import { userConstants } from \"../_constants\";\nimport { userService } from \"../_services\";\nimport { alertActions } from \"./\";\nimport { history } from \"../_helpers\";\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll\n};\n\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      dispatch(success(user));\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push(\"/login\");\n      dispatch(alertActions.success(\"Registration successful\"));\n    }, error => {\n      dispatch(failure(error));\n      dispatch(alertActions.error(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error)));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["D:/Materi Kuliah/SEM 7/Magang/Assignment/MovieProject/src/_actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","username","password","dispatch","request","then","user","success","error","failure","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","push","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from \"../_constants\";\r\nimport { userService } from \"../_services\";\r\nimport { alertActions } from \"./\";\r\nimport { history } from \"../_helpers\";\r\n\r\nexport const userActions = {\r\n  login,\r\n  logout,\r\n  register,\r\n  getAll,\r\n};\r\n\r\nfunction login(username, password) {\r\n  return (dispatch) => {\r\n    dispatch(request({ username }));\r\n\r\n    userService.login(username, password).then(\r\n      (user) => {\r\n        dispatch(success(user));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error));\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(user) {\r\n    return { type: userConstants.LOGIN_REQUEST, user };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.LOGIN_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.LOGIN_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction logout() {\r\n  userService.logout();\r\n  return { type: userConstants.LOGOUT };\r\n}\r\n\r\nfunction register(user) {\r\n  return (dispatch) => {\r\n    dispatch(request(user));\r\n\r\n    userService.register(user).then(\r\n      (user) => {\r\n        dispatch(success());\r\n        history.push(\"/login\");\r\n        dispatch(alertActions.success(\"Registration successful\"));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error));\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(user) {\r\n    return { type: userConstants.REGISTER_REQUEST, user };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.REGISTER_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.REGISTER_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction getAll() {\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n\r\n    userService.getAll().then(\r\n      (users) => dispatch(success(users)),\r\n      (error) => dispatch(failure(error))\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETALL_REQUEST };\r\n  }\r\n  function success(users) {\r\n    return { type: userConstants.GETALL_SUCCESS, users };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.GETALL_FAILURE, error };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}